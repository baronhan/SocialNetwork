@using MyMVCApp.Services
@using Neo4j.ViewModels
@inject IHttpContextAccessor HttpContextAccessor
@inject Neo4jService _neo4jService

@{
    var userId = HttpContextAccessor.HttpContext?.Session.GetString("id");
    UpdatePersonalInformationVM user = null;
    if (!string.IsNullOrEmpty(userId))
    {
        user = await _neo4jService.GetPersonalInformationByIdAsync(userId);
    }
}
@model List<Neo4j.ViewModels.FamilyMemberVM>

<h4 class="mt-3 mb-3">Family Members</h4>
<ul class="suggestions-lists m-0 p-0">
    <li class="d-flex mb-4 align-items-center">
        <div class="user-img img-fluid"><i class="ri-add-fill"></i></div>
        <div class="media-support-info ms-3">
            <h6>
                <a href="javascript:void(0);" onclick="showAddFamilyForm()">
                    Add Family Members
                </a>
            </h6>
        </div>
    </li>

    @foreach (var member in Model)
    {
        <li class="d-flex mb-4 align-items-center justify-content-between">
            <div class="user-img img-fluid">
                <img src="@member.User.ProfileImage" alt="story-img" class="rounded-circle avatar-40">
            </div>
            <div class="w-100">
                <div class="d-flex justify-content-between">
                    <div class="ms-3">
                        <h6>@member.User.Firstname @member.User.Lastname</h6>
                        <p class="mb-0">@member.Relation</p>
                    </div>
                    <div class="edit-relation">
                         <a href="javascript:void(0);" onclick="deleteFamilyMember('@member.User.Id')">
                            <i class="ri-delete-bin-line me-2"></i>Delete
                        </a>
                        <a href="javascript:void(0);" onclick="showEditFamilyForm('@member.User.Id', '@member.Relation')">
                            <i class="ri-edit-line me-2"></i>Edit
                        </a>
                    </div>
                </div>
            </div>
        </li>
    }
</ul>

<div id="add-family-form" style="display:none;">
    <h5>Add Family Member</h5>
    <input type="text" class="form-control" id="family-username" onkeyup="getUserSuggestions()" placeholder="Enter Username" />
    
    <div id="user-suggestions" class="suggestions-list"></div>

    <div id="selected-user-info"></div>
    </br>
    <select class="form-select" id="relationship">
        <option value="">Select Relationship</option>
        <option value="Mother">Mother</option>
        <option value="Father">Father</option>
        <option value="Brother">Brother</option>
        <option value="Sister">Sister</option>
        <option value="Son">Son</option>
        <option value="Daughter">Daughter</option>
    </select>
    <br />
    
    <div class="d-flex">
        <button class="btn btn-primary me-2" id="save-family-btn" onclick="saveFamilyMember()">Save</button>
        <button class="btn bg-soft-danger" onclick="cancelAddFamily()">Cancel</button>
    </div>
    <br />
</div>

<div id="edit-family-form" style="display:none;">
    <h5>Edit Family Member</h5>
    <input type="hidden" class="form-control" id="edit-family-username" name="username" readonly />

    <select class="form-select" id="edit-relationship">
        <option value="Mother">Mother</option>
        <option value="Father">Father</option>
        <option value="Brother">Brother</option>
        <option value="Sister">Sister</option>
        <option value="Son">Son</option>
        <option value="Daughter">Daughter</option>
    </select>
    <br />

    <div class="d-flex">
        <button class="btn btn-primary me-2" id="update-family-btn" onclick="updateFamilyMember()">Update</button>
        <button class="btn bg-soft-danger" onclick="cancelEditFamily()">Cancel</button>
    </div>
    <br />
</div>

<script>
    var familyMembers = [
        @foreach (var member in Model)
        {
            @: '@member.User.Username',
        }
    ];

    function showAddFamilyForm() {
        document.getElementById("add-family-form").style.display = "block";
    }

    function cancelAddFamily() {
        document.getElementById("add-family-form").style.display = "none";
        document.getElementById("family-username").value = '';
        document.getElementById("relationship").value = '';
        document.getElementById("user-suggestions").innerHTML = '';
        document.getElementById("selected-user-info").innerHTML = '';
    }

    function getUserSuggestions() {
        var username = document.getElementById("family-username").value;
        $.ajax({
            url: '@Url.Action("GetUserSuggestions", "Family")',
            method: 'GET',
            data: { username: username },
            success: function (data) {
                $('#user-suggestions').empty();
                data.forEach(function (user) {
                    $('#user-suggestions').append('<div onclick="selectUser(\'' + user.username + '\', \'' + user.profileImage + '\', \'' + user.firstname + '\', \'' + user.lastname + '\')">'
                        + user.username +
                        '</div>');
                });
            }
        });
    }

    function selectUser(username, profileImage, firstname, lastname) {
        $('#family-username').val(username);
        $('#user-suggestions').empty();
        $('#selected-user-info').html('<img src="' + profileImage + '" alt="Profile Image" class="rounded-circle avatar-40"> <strong>' + firstname + ' ' + lastname + '</strong>');
    }

    function saveFamilyMember() {
        var username = document.getElementById("family-username").value;
        var relationship = document.getElementById("relationship").value;

        if (!username || !relationship) {
            alert("Please enter username and select a relationship.");
            return;
        }
        var currentUser = '@user.Username';
        if (username === currentUser) {
            alert("You cannot add yourself.");
            return;
        }

        if (familyMembers.includes(username)) {
            alert("This user is already a family member.");
            return;
        }

        $.ajax({
            url: '@Url.Action("AddFamilyRequest", "Family")',
            method: 'POST',
            data: {
                familyUsername: username,
                relationship: relationship
            },
            success: function (response) {
                if (response.success) {
                    alert("The family request was sent successfully.");
                    familyMembers.push(username);
                    document.getElementById("add-family-form").style.display = "none";
                    location.reload();
                } else {
                    alert("Error: " + (response.message || "Failed to send family request."));
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("An error occurred while sending the family request: " + errorThrown);
            }
        });
    }


    function showEditFamilyForm(username, relationship) {

        document.getElementById("edit-family-form").style.display = "block";

        document.getElementById("edit-family-username").value = username;
        document.getElementById("edit-relationship").value = relationship;
    }

    function cancelEditFamily() {

        document.getElementById("edit-family-form").style.display = "none";
    }

    function updateFamilyMember() {
        var id = document.getElementById("edit-family-username").value;
        var relationship = document.getElementById("edit-relationship").value;

        if (!relationship) {
            alert("Please select a valid relationship.");
            return;
        }

        $.ajax({
            url: '@Url.Action("UpdateFamilyMember", "Family")', 
            method: 'POST',
            data: {
                FriendId: id,
                relationship: relationship
            },
            success: function (response) {
                if (response.success) {
                    alert("The family member was updated successfully.");
                    document.getElementById("edit-family-form").style.display = "none";
                    location.reload(); 
                } else {
                    alert("Error: " + (response.message || "Failed to update family member."));
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("An error occurred while updating the family member: " + errorThrown);
            }
        });
    }

    function deleteFamilyMember(userId) {
    if (confirm("Are you sure you want to delete this family member?")) {
        $.ajax({
            url: '@Url.Action("DeleteFamilyMember", "Family")',
            method: 'POST',
            data: {
                userId: userId
            },
            success: function (response) {
                if (response.success) {
                    alert("The family member was deleted successfully.");
                    location.reload(); 
                } else {
                    alert("Error: " + (response.message || "Failed to delete family member."));
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("An error occurred while deleting the family member: " + errorThrown);
            }
        });
    }
}

</script>
